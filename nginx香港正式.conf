
events {
    use epoll;
    worker_connections      51200;  # Maxclient = work_processes *　worker_connections
 }
http {

## 用户的 IP 地址 $binary_remote_addr 作为 Key，每个 IP 地址最多有 100 个并发连接
## 你想开 几千个连接 刷死我？ 超过 100 个连接，直接返回 503 错误给你，根本不处理你的请求了
limit_conn_zone $binary_remote_addr zone=TotalConnLimitZone:40m ;
limit_conn  TotalConnLimitZone  200;
limit_conn_log_level notice;

## 用户的 IP 地址 $binary_remote_addr 作为 Key，每个 IP 地址每秒处理 40 个请求
## 你想用程序每秒几百次的刷我，没戏，再快了就不处理了，直接返回 503 错误给你
limit_req_zone $binary_remote_addr zone=ConnLimitZone:40m  rate=40r/s;
limit_req_log_level notice;

log_format  main  '$remote_addr - $remote_user [$time_local] '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$request" "$http_x_forwarded_for"';

fastcgi_connect_timeout 300;
fastcgi_send_timeout 300;
fastcgi_read_timeout 300;
fastcgi_buffer_size 64k; 
fastcgi_buffers 4 64k; 
fastcgi_busy_buffers_size 128k; 
fastcgi_temp_file_write_size 128k;

        client_header_buffer_size 128k;
        large_client_header_buffers 4 128k;


 # Configuration of the server group
    upstream appservers {
        #zone appservers 64k;
#ip_hash;
       server  10.200.11.101:80      weight=4;
       server  10.200.11.102:80      weight=5;
    }
    upstream appservers_test {
        #zone appservers 64k;
#ip_hash;
       server  10.200.11.101:801	   weight=4;
       server  10.200.11.102:801	   weight=5;
    }

  server {
                listen 80;

        # Location that proxies requests to the group
        location / {
            proxy_pass http://appservers;

                #proxy_http_version 1.1;
        #proxy_set_header Upgrade $http_upgrade;
        #proxy_set_header Connection keep-alive;        
		#proxy_cache_bypass $http_upgrade;

        client_max_body_size 300m;
        client_body_buffer_size 1024k;

        proxy_connect_timeout 600;
        proxy_read_timeout 600;
        proxy_send_timeout 600;
        proxy_buffer_size 64k;
        proxy_buffers   4 32k;
        proxy_busy_buffers_size 64k;
        proxy_temp_file_write_size 64k;
        proxy_set_header Host $host;
        proxy_set_header X-real-ip $remote_addr;

		
	## 最多 20 个排队， 由于每秒处理 40 个请求 + 20个排队，你一秒最多发送 60 个请求过来，再多就直接返回 503 $
        limit_req zone=ConnLimitZone burst=20 nodelay;

	access_log /home/nginx_logs/access.log  main;
#            health_check;
        }
    }

server {
          	listen 801;

        # Location that proxies requests to the group
        location / {
            proxy_pass http://appservers_test;
       
        #proxy_http_version 1.1;
        #proxy_set_header Upgrade $http_upgrade;
        #proxy_set_header Connection keep-alive;        
		#proxy_cache_bypass $http_upgrade;

        client_max_body_size 300m;
        client_body_buffer_size 1024k;

        proxy_connect_timeout 600;
        proxy_read_timeout 600;
        proxy_send_timeout 600;
        proxy_buffer_size 64k;
        proxy_buffers   4 32k;
        proxy_busy_buffers_size 64k;
        proxy_temp_file_write_size 64k;
        proxy_set_header Host $host;
        proxy_set_header X-real-ip $remote_addr;

	## 最多 20 个排队， 由于每秒处理 40 个请求 + 20个排队，你一秒最多发送 60 个请求过来，再多就直接返回 503 $
        limit_req zone=ConnLimitZone burst=20 nodelay;

        access_log  /home/nginx_logs/access_test.log  main;
#            health_check;
        }
    }



}

